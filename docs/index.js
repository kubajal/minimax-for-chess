Index.PACKAGES = {"chess" : [], "chess.controller" : [{"name" : "chess.controller.Algorithm", "shortDescription" : "Implementation of the minimax algorithm with alpha-beta pruning.", "members_class" : [{"label" : "run", "tail" : "(): (Figure, (Int, Int))", "member" : "chess.controller.Algorithm.run", "link" : "chess\/controller\/Algorithm.html#run():(chess.model.Figure,(Int,Int))", "kind" : "def"}, {"label" : "max", "tail" : "(alpha: Int, beta: Int, height: Int, state: InternalState): Int", "member" : "chess.controller.Algorithm.max", "link" : "chess\/controller\/Algorithm.html#max(alpha:Int,beta:Int,height:Int,state:chess.controller.InternalState):Int", "kind" : "def"}, {"label" : "min", "tail" : "(alpha: Int, beta: Int, height: Int, state: InternalState): Int", "member" : "chess.controller.Algorithm.min", "link" : "chess\/controller\/Algorithm.html#min(alpha:Int,beta:Int,height:Int,state:chess.controller.InternalState):Int", "kind" : "def"}, {"label" : "INFINITY", "tail" : ": Int", "member" : "chess.controller.Algorithm.INFINITY", "link" : "chess\/controller\/Algorithm.html#INFINITY:Int", "kind" : "val"}, {"label" : "evaluator", "tail" : ": Evaluator", "member" : "chess.controller.Algorithm.evaluator", "link" : "chess\/controller\/Algorithm.html#evaluator:chess.controller.Evaluator", "kind" : "val"}, {"label" : "maximizing", "tail" : ": PlayerColor", "member" : "chess.controller.Algorithm.maximizing", "link" : "chess\/controller\/Algorithm.html#maximizing:chess.model.PlayerColor.PlayerColor", "kind" : "val"}, {"member" : "chess.controller.Algorithm#<init>", "error" : "unsupported entity"}, {"label" : "depth", "tail" : ": Int", "member" : "chess.controller.Algorithm.depth", "link" : "chess\/controller\/Algorithm.html#depth:Int", "kind" : "val"}, {"label" : "initialState", "tail" : ": InternalState", "member" : "chess.controller.Algorithm.initialState", "link" : "chess\/controller\/Algorithm.html#initialState:chess.controller.InternalState", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/controller\/Algorithm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/controller\/Algorithm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/controller\/Algorithm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/controller\/Algorithm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/controller\/Algorithm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/controller\/Algorithm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/controller\/Algorithm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Algorithm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Algorithm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Algorithm.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/controller\/Algorithm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/controller\/Algorithm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chess\/controller\/Algorithm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/controller\/Algorithm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/controller\/Algorithm.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/controller\/Algorithm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/controller\/Algorithm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/controller\/Algorithm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/controller\/Algorithm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chess\/controller\/Algorithm.html", "kind" : "class"}, {"name" : "chess.controller.Controller", "shortDescription" : "Represents the core logic of the game.", "members_case class" : [{"label" : "setBoardPanel", "tail" : "(_boardPanel: BoardPanel): Unit", "member" : "chess.controller.Controller.setBoardPanel", "link" : "chess\/controller\/Controller.html#setBoardPanel(_boardPanel:chess.view.BoardPanel):Unit", "kind" : "def"}, {"label" : "getWhiteFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.Controller.getWhiteFigures", "link" : "chess\/controller\/Controller.html#getWhiteFigures:Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "getBlackFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.Controller.getBlackFigures", "link" : "chess\/controller\/Controller.html#getBlackFigures:Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "isPlayersMove", "tail" : "(): Boolean", "member" : "chess.controller.Controller.isPlayersMove", "link" : "chess\/controller\/Controller.html#isPlayersMove:Boolean", "kind" : "def"}, {"label" : "findPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.Controller.findPossibleMoves", "link" : "chess\/controller\/Controller.html#findPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "win", "tail" : "(color: PlayerColor): Unit", "member" : "chess.controller.Controller.win", "link" : "chess\/controller\/Controller.html#win(color:chess.model.PlayerColor.PlayerColor):Unit", "kind" : "def"}, {"label" : "computerVsComputer", "tail" : "(): Unit", "member" : "chess.controller.Controller.computerVsComputer", "link" : "chess\/controller\/Controller.html#computerVsComputer():Unit", "kind" : "def"}, {"label" : "makeComputerMove", "tail" : "(): Unit", "member" : "chess.controller.Controller.makeComputerMove", "link" : "chess\/controller\/Controller.html#makeComputerMove():Unit", "kind" : "def"}, {"label" : "makePlayerMove", "tail" : "(figure: Figure, destination: (Int, Int)): Unit", "member" : "chess.controller.Controller.makePlayerMove", "link" : "chess\/controller\/Controller.html#makePlayerMove(figure:chess.model.Figure,destination:(Int,Int)):Unit", "kind" : "def"}, {"label" : "stalemate", "tail" : "(color: PlayerColor): Unit", "member" : "chess.controller.Controller.stalemate", "link" : "chess\/controller\/Controller.html#stalemate(color:chess.model.PlayerColor.PlayerColor):Unit", "kind" : "def"}, {"label" : "getOpponentColor", "tail" : "(): PlayerColor", "member" : "chess.controller.Controller.getOpponentColor", "link" : "chess\/controller\/Controller.html#getOpponentColor():chess.model.PlayerColor.PlayerColor", "kind" : "def"}, {"label" : "getOpponentColor", "tail" : "(playerColor: PlayerColor): PlayerColor", "member" : "chess.controller.Controller.getOpponentColor", "link" : "chess\/controller\/Controller.html#getOpponentColor(playerColor:chess.model.PlayerColor.PlayerColor):chess.model.PlayerColor.PlayerColor", "kind" : "def"}, {"label" : "createBoard", "tail" : "(w: Vector[Figure], b: Vector[Figure]): Vector[Vector[Figure]]", "member" : "chess.controller.Controller.createBoard", "link" : "chess\/controller\/Controller.html#createBoard(w:Vector[chess.model.Figure],b:Vector[chess.model.Figure]):Vector[Vector[chess.model.Figure]]", "kind" : "def"}, {"label" : "createBlackFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.Controller.createBlackFigures", "link" : "chess\/controller\/Controller.html#createBlackFigures():Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "createWhiteFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.Controller.createWhiteFigures", "link" : "chess\/controller\/Controller.html#createWhiteFigures():Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "getBoardPanel", "tail" : "(): BoardPanel", "member" : "chess.controller.Controller.getBoardPanel", "link" : "chess\/controller\/Controller.html#getBoardPanel():chess.view.BoardPanel", "kind" : "def"}, {"label" : "getBoard", "tail" : "(): Vector[Vector[Figure]]", "member" : "chess.controller.Controller.getBoard", "link" : "chess\/controller\/Controller.html#getBoard():Vector[Vector[chess.model.Figure]]", "kind" : "def"}, {"label" : "currentState", "tail" : ": InternalState", "member" : "chess.controller.Controller.currentState", "link" : "chess\/controller\/Controller.html#currentState:chess.controller.InternalState", "kind" : "var"}, {"label" : "blackFigures", "tail" : ": Vector[Figure]", "member" : "chess.controller.Controller.blackFigures", "link" : "chess\/controller\/Controller.html#blackFigures:Vector[chess.model.Figure]", "kind" : "val"}, {"label" : "whiteFigures", "tail" : ": Vector[Figure]", "member" : "chess.controller.Controller.whiteFigures", "link" : "chess\/controller\/Controller.html#whiteFigures:Vector[chess.model.Figure]", "kind" : "val"}, {"label" : "boardPanel", "tail" : ": BoardPanel", "member" : "chess.controller.Controller.boardPanel", "link" : "chess\/controller\/Controller.html#boardPanel:chess.view.BoardPanel", "kind" : "var"}, {"member" : "chess.controller.Controller#<init>", "error" : "unsupported entity"}, {"label" : "playerColor", "tail" : ": PlayerColor", "member" : "chess.controller.Controller.playerColor", "link" : "chess\/controller\/Controller.html#playerColor:chess.model.PlayerColor.PlayerColor", "kind" : "val"}, {"label" : "blackKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKingImage", "link" : "chess\/controller\/Controller.html#blackKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackQueenImage", "link" : "chess\/controller\/Controller.html#blackQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackRookImage", "link" : "chess\/controller\/Controller.html#blackRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackBishopImage", "link" : "chess\/controller\/Controller.html#blackBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKnightImage", "link" : "chess\/controller\/Controller.html#blackKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackPawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackPawnImage", "link" : "chess\/controller\/Controller.html#blackPawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKingImage", "link" : "chess\/controller\/Controller.html#whiteKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteQueenImage", "link" : "chess\/controller\/Controller.html#whiteQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteRookImage", "link" : "chess\/controller\/Controller.html#whiteRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteBishopImage", "link" : "chess\/controller\/Controller.html#whiteBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKnightImage", "link" : "chess\/controller\/Controller.html#whiteKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whitePawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whitePawnImage", "link" : "chess\/controller\/Controller.html#whitePawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/controller\/Controller.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/controller\/Controller.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/controller\/Controller.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/controller\/Controller.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/controller\/Controller.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/controller\/Controller.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/controller\/Controller.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Controller.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Controller.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Controller.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/controller\/Controller.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/controller\/Controller.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/controller\/Controller.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/controller\/Controller.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/controller\/Controller.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/controller\/Controller.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chess\/controller\/Controller.html", "kind" : "case class"}, {"name" : "chess.controller.Evaluator", "shortDescription" : "Represents a function that is used by chess.controller.Algorithm to evaluate the state of the board from the maximizing players perspective.", "members_class" : [{"label" : "evaluateState", "tail" : "(internalState: InternalState): Int", "member" : "chess.controller.Evaluator.evaluateState", "link" : "chess\/controller\/Evaluator.html#evaluateState(internalState:chess.controller.InternalState):Int", "kind" : "def"}, {"label" : "evaluate", "tail" : "(figure: Figure): Int", "member" : "chess.controller.Evaluator.evaluate", "link" : "chess\/controller\/Evaluator.html#evaluate(figure:chess.model.Figure):Int", "kind" : "def"}, {"label" : "kingTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.kingTable", "link" : "chess\/controller\/Evaluator.html#kingTable:Array[Array[Int]]", "kind" : "val"}, {"label" : "queenTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.queenTable", "link" : "chess\/controller\/Evaluator.html#queenTable:Array[Array[Int]]", "kind" : "val"}, {"label" : "rookTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.rookTable", "link" : "chess\/controller\/Evaluator.html#rookTable:Array[Array[Int]]", "kind" : "val"}, {"label" : "bishopTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.bishopTable", "link" : "chess\/controller\/Evaluator.html#bishopTable:Array[Array[Int]]", "kind" : "val"}, {"label" : "knightTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.knightTable", "link" : "chess\/controller\/Evaluator.html#knightTable:Array[Array[Int]]", "kind" : "val"}, {"label" : "pawnTable", "tail" : ": Array[Array[Int]]", "member" : "chess.controller.Evaluator.pawnTable", "link" : "chess\/controller\/Evaluator.html#pawnTable:Array[Array[Int]]", "kind" : "val"}, {"member" : "chess.controller.Evaluator#<init>", "error" : "unsupported entity"}, {"label" : "maximizing", "tail" : ": PlayerColor", "member" : "chess.controller.Evaluator.maximizing", "link" : "chess\/controller\/Evaluator.html#maximizing:chess.model.PlayerColor.PlayerColor", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/controller\/Evaluator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/controller\/Evaluator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/controller\/Evaluator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/controller\/Evaluator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/controller\/Evaluator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/controller\/Evaluator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/controller\/Evaluator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Evaluator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Evaluator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Evaluator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/controller\/Evaluator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/controller\/Evaluator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chess\/controller\/Evaluator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/controller\/Evaluator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/controller\/Evaluator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/controller\/Evaluator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/controller\/Evaluator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/controller\/Evaluator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/controller\/Evaluator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "chess\/controller\/Evaluator.html", "kind" : "class"}, {"name" : "chess.controller.InternalState", "shortDescription" : "Represents the situation on the board including the set of white figures, the set of black figures and the generalstate of the board.", "members_case class" : [{"label" : "getChildren", "tail" : "(): Vector[InternalState]", "member" : "chess.controller.InternalState.getChildren", "link" : "chess\/controller\/InternalState.html#getChildren():Vector[chess.controller.InternalState]", "kind" : "def"}, {"label" : "getAllMoves", "tail" : "(color: PlayerColor): Vector[(Figure, (Int, Int))]", "member" : "chess.controller.InternalState.getAllMoves", "link" : "chess\/controller\/InternalState.html#getAllMoves(color:chess.model.PlayerColor.PlayerColor):Vector[(chess.model.Figure,(Int,Int))]", "kind" : "def"}, {"label" : "getAllMoves", "tail" : "(): Vector[(Figure, (Int, Int))]", "member" : "chess.controller.InternalState.getAllMoves", "link" : "chess\/controller\/InternalState.html#getAllMoves():Vector[(chess.model.Figure,(Int,Int))]", "kind" : "def"}, {"label" : "findQueenPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findQueenPossibleMoves", "link" : "chess\/controller\/InternalState.html#findQueenPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "findRookPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findRookPossibleMoves", "link" : "chess\/controller\/InternalState.html#findRookPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "findBishopPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findBishopPossibleMoves", "link" : "chess\/controller\/InternalState.html#findBishopPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "addAllPossibleMovesInDirection", "tail" : "(figure: Figure, h: Int, v: Int): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.addAllPossibleMovesInDirection", "link" : "chess\/controller\/InternalState.html#addAllPossibleMovesInDirection(figure:chess.model.Figure,h:Int,v:Int):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "makeMove", "tail" : "(figure: Figure, destination: (Int, Int)): InternalState", "member" : "chess.controller.InternalState.makeMove", "link" : "chess\/controller\/InternalState.html#makeMove(figure:chess.model.Figure,destination:(Int,Int)):chess.controller.InternalState", "kind" : "def"}, {"label" : "makeMove", "tail" : "(x: (Figure, (Int, Int))): InternalState", "member" : "chess.controller.InternalState.makeMove", "link" : "chess\/controller\/InternalState.html#makeMove(x:(chess.model.Figure,(Int,Int))):chess.controller.InternalState", "kind" : "def"}, {"label" : "findKingPossibleMoves", "tail" : "(f: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findKingPossibleMoves", "link" : "chess\/controller\/InternalState.html#findKingPossibleMoves(f:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "getFigure", "tail" : "(x: Int, y: Int): Figure", "member" : "chess.controller.InternalState.getFigure", "link" : "chess\/controller\/InternalState.html#getFigure(x:Int,y:Int):chess.model.Figure", "kind" : "def"}, {"label" : "getFigure", "tail" : "(e: (Int, Int)): Figure", "member" : "chess.controller.InternalState.getFigure", "link" : "chess\/controller\/InternalState.html#getFigure(e:(Int,Int)):chess.model.Figure", "kind" : "def"}, {"label" : "findKnightPossibleMoves", "tail" : "(f: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findKnightPossibleMoves", "link" : "chess\/controller\/InternalState.html#findKnightPossibleMoves(f:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "findPawnPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findPawnPossibleMoves", "link" : "chess\/controller\/InternalState.html#findPawnPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "blackPawnAttackMoves", "tail" : "(pawn: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.blackPawnAttackMoves", "link" : "chess\/controller\/InternalState.html#blackPawnAttackMoves(pawn:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "whitePawnAttackMoves", "tail" : "(pawn: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.whitePawnAttackMoves", "link" : "chess\/controller\/InternalState.html#whitePawnAttackMoves(pawn:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "findPossibleMoves", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findPossibleMoves", "link" : "chess\/controller\/InternalState.html#findPossibleMoves(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "findCoveredFields", "tail" : "(figure: Figure): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findCoveredFields", "link" : "chess\/controller\/InternalState.html#findCoveredFields(figure:chess.model.Figure):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "isKingAttacked", "tail" : "(kingColor: PlayerColor): Boolean", "member" : "chess.controller.InternalState.isKingAttacked", "link" : "chess\/controller\/InternalState.html#isKingAttacked(kingColor:chess.model.PlayerColor.PlayerColor):Boolean", "kind" : "def"}, {"label" : "findPawnAttackMoves", "tail" : "(pawn: Figure): Vector[(Figure, (Int, Int))]", "member" : "chess.controller.InternalState.findPawnAttackMoves", "link" : "chess\/controller\/InternalState.html#findPawnAttackMoves(pawn:chess.model.Figure):Vector[(chess.model.Figure,(Int,Int))]", "kind" : "def"}, {"label" : "findAllCoveredFields", "tail" : "(color: PlayerColor): Vector[(Int, Int)]", "member" : "chess.controller.InternalState.findAllCoveredFields", "link" : "chess\/controller\/InternalState.html#findAllCoveredFields(color:chess.model.PlayerColor.PlayerColor):Vector[(Int,Int)]", "kind" : "def"}, {"label" : "getOpponentColor", "tail" : "(color: PlayerColor): PlayerColor", "member" : "chess.controller.InternalState.getOpponentColor", "link" : "chess\/controller\/InternalState.html#getOpponentColor(color:chess.model.PlayerColor.PlayerColor):chess.model.PlayerColor.PlayerColor", "kind" : "def"}, {"label" : "getBoard", "tail" : "(): Vector[Vector[Figure]]", "member" : "chess.controller.InternalState.getBoard", "link" : "chess\/controller\/InternalState.html#getBoard:Vector[Vector[chess.model.Figure]]", "kind" : "def"}, {"label" : "getFigures", "tail" : "(color: PlayerColor): Vector[Figure]", "member" : "chess.controller.InternalState.getFigures", "link" : "chess\/controller\/InternalState.html#getFigures(color:chess.model.PlayerColor.PlayerColor):Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "getBlackFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.InternalState.getBlackFigures", "link" : "chess\/controller\/InternalState.html#getBlackFigures():Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "getWhiteFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.InternalState.getWhiteFigures", "link" : "chess\/controller\/InternalState.html#getWhiteFigures():Vector[chess.model.Figure]", "kind" : "def"}, {"label" : "getMoves", "tail" : "(figure: Figure): Vector[(Figure, (Int, Int))]", "member" : "chess.controller.InternalState.getMoves", "link" : "chess\/controller\/InternalState.html#getMoves(figure:chess.model.Figure):Vector[(chess.model.Figure,(Int,Int))]", "kind" : "def"}, {"label" : "getActiveFigures", "tail" : "(): Vector[Figure]", "member" : "chess.controller.InternalState.getActiveFigures", "link" : "chess\/controller\/InternalState.html#getActiveFigures():Vector[chess.model.Figure]", "kind" : "def"}, {"member" : "chess.controller.InternalState#<init>", "error" : "unsupported entity"}, {"label" : "activePlayer", "tail" : ": PlayerColor", "member" : "chess.controller.InternalState.activePlayer", "link" : "chess\/controller\/InternalState.html#activePlayer:chess.model.PlayerColor.PlayerColor", "kind" : "val"}, {"label" : "board", "tail" : ": Vector[Vector[Figure]]", "member" : "chess.controller.InternalState.board", "link" : "chess\/controller\/InternalState.html#board:Vector[Vector[chess.model.Figure]]", "kind" : "val"}, {"label" : "blackFigures", "tail" : ": Vector[Figure]", "member" : "chess.controller.InternalState.blackFigures", "link" : "chess\/controller\/InternalState.html#blackFigures:Vector[chess.model.Figure]", "kind" : "val"}, {"label" : "whiteFigures", "tail" : ": Vector[Figure]", "member" : "chess.controller.InternalState.whiteFigures", "link" : "chess\/controller\/InternalState.html#whiteFigures:Vector[chess.model.Figure]", "kind" : "val"}, {"label" : "blackKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKingImage", "link" : "chess\/controller\/InternalState.html#blackKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackQueenImage", "link" : "chess\/controller\/InternalState.html#blackQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackRookImage", "link" : "chess\/controller\/InternalState.html#blackRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackBishopImage", "link" : "chess\/controller\/InternalState.html#blackBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKnightImage", "link" : "chess\/controller\/InternalState.html#blackKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackPawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackPawnImage", "link" : "chess\/controller\/InternalState.html#blackPawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKingImage", "link" : "chess\/controller\/InternalState.html#whiteKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteQueenImage", "link" : "chess\/controller\/InternalState.html#whiteQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteRookImage", "link" : "chess\/controller\/InternalState.html#whiteRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteBishopImage", "link" : "chess\/controller\/InternalState.html#whiteBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKnightImage", "link" : "chess\/controller\/InternalState.html#whiteKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whitePawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whitePawnImage", "link" : "chess\/controller\/InternalState.html#whitePawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/controller\/InternalState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/controller\/InternalState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/controller\/InternalState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/controller\/InternalState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/controller\/InternalState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/controller\/InternalState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/controller\/InternalState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/InternalState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/InternalState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/InternalState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/controller\/InternalState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/controller\/InternalState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/controller\/InternalState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/controller\/InternalState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/controller\/InternalState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/controller\/InternalState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chess\/controller\/InternalState.html", "kind" : "case class"}, {"name" : "chess.controller.Main", "shortDescription" : "Entry point to the application.", "object" : "chess\/controller\/Main$.html", "members_object" : [{"label" : "boardPanel", "tail" : ": BoardPanel", "member" : "chess.controller.Main.boardPanel", "link" : "chess\/controller\/Main$.html#boardPanel:chess.view.BoardPanel", "kind" : "val"}, {"label" : "controller", "tail" : ": Controller", "member" : "chess.controller.Main.controller", "link" : "chess\/controller\/Main$.html#controller:chess.controller.Controller", "kind" : "var"}, {"label" : "chooseColor", "tail" : ": Int", "member" : "chess.controller.Main.chooseColor", "link" : "chess\/controller\/Main$.html#chooseColor:Int", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "chess\/controller\/Main$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: â‡’ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "chess\/controller\/Main$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "chess\/controller\/Main$.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "chess\/controller\/Main$.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/controller\/Main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/controller\/Main$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/controller\/Main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/controller\/Main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/controller\/Main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/controller\/Main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/controller\/Main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/controller\/Main$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/controller\/Main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/controller\/Main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chess\/controller\/Main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/controller\/Main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/controller\/Main$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/controller\/Main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/controller\/Main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/controller\/Main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/controller\/Main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "chess.model" : [{"name" : "chess.model.Figure", "shortDescription" : "A chess figure.", "members_case class" : [{"label" : "getColor", "tail" : "(): PlayerColor.PlayerColor", "member" : "chess.model.Figure.getColor", "link" : "chess\/model\/Figure.html#getColor():chess.model.PlayerColor.PlayerColor", "kind" : "def"}, {"label" : "getType", "tail" : "(): FigureType.FigureType", "member" : "chess.model.Figure.getType", "link" : "chess\/model\/Figure.html#getType():chess.model.FigureType.FigureType", "kind" : "def"}, {"label" : "XY", "tail" : "(): (Int, Int)", "member" : "chess.model.Figure.XY", "link" : "chess\/model\/Figure.html#XY():(Int,Int)", "kind" : "def"}, {"label" : "getY", "tail" : "(): Int", "member" : "chess.model.Figure.getY", "link" : "chess\/model\/Figure.html#getY:Int", "kind" : "def"}, {"label" : "getX", "tail" : "(): Int", "member" : "chess.model.Figure.getX", "link" : "chess\/model\/Figure.html#getX:Int", "kind" : "def"}, {"label" : "getPoint", "tail" : "(): (Int, Int)", "member" : "chess.model.Figure.getPoint", "link" : "chess\/model\/Figure.html#getPoint:(Int,Int)", "kind" : "def"}, {"label" : "getFigureImage", "tail" : "(): JLabel", "member" : "chess.model.Figure.getFigureImage", "link" : "chess\/model\/Figure.html#getFigureImage:javax.swing.JLabel", "kind" : "def"}, {"member" : "chess.model.Figure#<init>", "error" : "unsupported entity"}, {"label" : "figureImage", "tail" : ": JLabel", "member" : "chess.model.Figure.figureImage", "link" : "chess\/model\/Figure.html#figureImage:javax.swing.JLabel", "kind" : "val"}, {"label" : "y", "tail" : ": Int", "member" : "chess.model.Figure.y", "link" : "chess\/model\/Figure.html#y:Int", "kind" : "val"}, {"label" : "x", "tail" : ": Int", "member" : "chess.model.Figure.x", "link" : "chess\/model\/Figure.html#x:Int", "kind" : "val"}, {"label" : "color", "tail" : ": PlayerColor.PlayerColor", "member" : "chess.model.Figure.color", "link" : "chess\/model\/Figure.html#color:chess.model.PlayerColor.PlayerColor", "kind" : "val"}, {"label" : "figureType", "tail" : ": FigureType.FigureType", "member" : "chess.model.Figure.figureType", "link" : "chess\/model\/Figure.html#figureType:chess.model.FigureType.FigureType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/model\/Figure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/model\/Figure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/model\/Figure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/model\/Figure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/model\/Figure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/model\/Figure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/model\/Figure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Figure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Figure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Figure.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/model\/Figure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/model\/Figure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/model\/Figure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/model\/Figure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/model\/Figure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/model\/Figure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "chess\/model\/Figure.html", "kind" : "case class"}, {"name" : "chess.model.FigureType", "shortDescription" : "Type of figure.", "object" : "chess\/model\/FigureType$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "chess\/model\/FigureType$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "chess\/model\/FigureType$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/FigureType$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "King", "tail" : ": Value", "member" : "chess.model.FigureType.King", "link" : "chess\/model\/FigureType$.html#King:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "Queen", "tail" : ": Value", "member" : "chess.model.FigureType.Queen", "link" : "chess\/model\/FigureType$.html#Queen:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "Rook", "tail" : ": Value", "member" : "chess.model.FigureType.Rook", "link" : "chess\/model\/FigureType$.html#Rook:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "Bishop", "tail" : ": Value", "member" : "chess.model.FigureType.Bishop", "link" : "chess\/model\/FigureType$.html#Bishop:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "Knight", "tail" : ": Value", "member" : "chess.model.FigureType.Knight", "link" : "chess\/model\/FigureType$.html#Knight:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "Pawn", "tail" : ": Value", "member" : "chess.model.FigureType.Pawn", "link" : "chess\/model\/FigureType$.html#Pawn:chess.model.FigureType.Value", "kind" : "val"}, {"label" : "FigureType", "tail" : "", "member" : "chess.model.FigureType.FigureType", "link" : "chess\/model\/FigureType$.html#FigureType=chess.model.FigureType.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/FigureType$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/FigureType$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/FigureType$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/FigureType$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "chess\/model\/FigureType$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "chess\/model\/FigureType$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "chess\/model\/FigureType$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "chess\/model\/FigureType$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "chess\/model\/FigureType$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "chess\/model\/FigureType$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "chess\/model\/FigureType$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "chess\/model\/FigureType$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/model\/FigureType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/model\/FigureType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/model\/FigureType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/model\/FigureType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/model\/FigureType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/model\/FigureType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/model\/FigureType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/FigureType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/FigureType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/FigureType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/model\/FigureType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/model\/FigureType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/model\/FigureType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/model\/FigureType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/model\/FigureType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/model\/FigureType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/model\/FigureType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/model\/FigureType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "chess.model.Images", "members_trait" : [{"label" : "blackKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKingImage", "link" : "chess\/model\/Images.html#blackKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackQueenImage", "link" : "chess\/model\/Images.html#blackQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackRookImage", "link" : "chess\/model\/Images.html#blackRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackBishopImage", "link" : "chess\/model\/Images.html#blackBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackKnightImage", "link" : "chess\/model\/Images.html#blackKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "blackPawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.blackPawnImage", "link" : "chess\/model\/Images.html#blackPawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKingImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKingImage", "link" : "chess\/model\/Images.html#whiteKingImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteQueenImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteQueenImage", "link" : "chess\/model\/Images.html#whiteQueenImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteRookImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteRookImage", "link" : "chess\/model\/Images.html#whiteRookImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteBishopImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteBishopImage", "link" : "chess\/model\/Images.html#whiteBishopImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whiteKnightImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whiteKnightImage", "link" : "chess\/model\/Images.html#whiteKnightImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "whitePawnImage", "tail" : ": ImageIcon", "member" : "chess.model.Images.whitePawnImage", "link" : "chess\/model\/Images.html#whitePawnImage:javax.swing.ImageIcon", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/model\/Images.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/model\/Images.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/model\/Images.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/model\/Images.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/model\/Images.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/model\/Images.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/model\/Images.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Images.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Images.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/Images.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/model\/Images.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/model\/Images.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "chess\/model\/Images.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/model\/Images.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/model\/Images.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/model\/Images.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/model\/Images.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/model\/Images.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/model\/Images.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Icons that will be show on the board for each figure.", "trait" : "chess\/model\/Images.html", "kind" : "trait"}, {"name" : "chess.model.PlayerColor", "shortDescription" : "Two colors of figures - White and Black.", "object" : "chess\/model\/PlayerColor$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "chess\/model\/PlayerColor$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "chess\/model\/PlayerColor$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/PlayerColor$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "White", "tail" : ": Value", "member" : "chess.model.PlayerColor.White", "link" : "chess\/model\/PlayerColor$.html#White:chess.model.PlayerColor.Value", "kind" : "val"}, {"label" : "Black", "tail" : ": Value", "member" : "chess.model.PlayerColor.Black", "link" : "chess\/model\/PlayerColor$.html#Black:chess.model.PlayerColor.Value", "kind" : "val"}, {"label" : "PlayerColor", "tail" : "", "member" : "chess.model.PlayerColor.PlayerColor", "link" : "chess\/model\/PlayerColor$.html#PlayerColor=chess.model.PlayerColor.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/PlayerColor$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/PlayerColor$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/PlayerColor$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "chess\/model\/PlayerColor$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "chess\/model\/PlayerColor$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "chess\/model\/PlayerColor$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "chess\/model\/PlayerColor$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "chess\/model\/PlayerColor$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "chess\/model\/PlayerColor$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "chess\/model\/PlayerColor$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "chess\/model\/PlayerColor$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "chess\/model\/PlayerColor$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "chess\/model\/PlayerColor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "chess\/model\/PlayerColor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "chess\/model\/PlayerColor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "chess\/model\/PlayerColor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "chess\/model\/PlayerColor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "chess\/model\/PlayerColor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "chess\/model\/PlayerColor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/PlayerColor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/PlayerColor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "chess\/model\/PlayerColor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "chess\/model\/PlayerColor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "chess\/model\/PlayerColor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "chess\/model\/PlayerColor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "chess\/model\/PlayerColor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "chess\/model\/PlayerColor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "chess\/model\/PlayerColor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "chess\/model\/PlayerColor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "chess\/model\/PlayerColor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};